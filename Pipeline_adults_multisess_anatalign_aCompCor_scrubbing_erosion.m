function ROISignals = Pipeline_Huiqing_multisess_anatalign_aCompCor_scrubbing_erosion(SubjectID,SessionID)
    fmri_root='/export/bedny/Projects/REST_ALLSUBS/dHCP_adults/data_preproc';
    ROI_root='/export/bedny/Projects/REST_ALLSUBS/dHCP_adults';
    
    fmri_dir=[fmri_root,filesep,'conn_',SubjectID,filesep,'session_',SessionID,filesep,'func'];
    ROI_dir=[ROI_root,filesep,'data_ROI'];

    file_motion_regressor=[fmri_dir,filesep,'dvars.confound.txt'];
    file_fMRI=[fmri_dir,filesep,'resting_bold.nii'];
    
    file_brainMask = [fmri_dir,filesep,'brainmask_T1.nii.gz'];
    file_brainMask_reslice=[fmri_dir,filesep,'r_brainmask_T1.nii'];
    y_Reslice(file_brainMask,file_brainMask_reslice,[],1,file_fMRI);
    MaskData = file_brainMask_reslice;

    ROIs={'A1','math_frontal','lang_frontal','gngc_frontal','SMC','math_occ','gngc_occ','lang_occ','V1'};
    hemi={'lh','rh'};
    ROIDef=cell(1,size(ROIs,2)*2);
    for iROI=1:size(ROIs,2)
        for iHemi=1:2
            %--copy ROI to fMRI folder
            file_ROI_orig=[ROI_dir,filesep,ROIs{1,iROI},'_','conn_',SubjectID,'_','session_',SessionID,'.',hemi{iHemi},'.nii'];
            file_ROI_dest=[fmri_dir,filesep,ROIs{1,iROI},'_','conn_',SubjectID,'_','session_',SessionID,'.',hemi{iHemi},'.nii'];
            copyfile(file_ROI_orig,file_ROI_dest);
            %--reslicing
            file_ROI_reslice = [fmri_dir,filesep,'r_',ROIs{1,iROI},'_',SubjectID,'_',SessionID,'.',hemi{iHemi},'.nii'];
            y_Reslice(file_ROI_dest,file_ROI_reslice,'',0, MaskData);
            ROIDef{1,(iROI-1)*2+iHemi}=file_ROI_reslice;
        end
    end

    %===============use ROI files in the ROI folder
%      for iROI=1:size(ROIs,2)
%         for iHemi=1:2
%             file_ROI_orig=[ROI_dir,filesep,ROIs{1,iROI},'_','conn_',SubjectID,'_','session_',SessionID,'.',hemi{iHemi},'.nii'];
%             ROIDef{1,(iROI-1)*2+iHemi}=file_ROI_orig;
%         end
%      end
    %-----------------

    OutputName=[fmri_dir,filesep,'ROI_signal'];

    %===========Regress covariates=================
    %--Regress covariates    
    mask_file_WM = ['conn_',SubjectID,'-','sess',SessionID,'_WM.nii.gz'];
    gunzip([fmri_dir,filesep,mask_file_WM]);  
    mask_file_WM = ['conn_',SubjectID,'-','sess',SessionID,'_WM.nii'];
    
    mask_file_CSF = ['conn_',SubjectID,'-','sess',SessionID,'_CSF.nii.gz']; 
    gunzip([fmri_dir,filesep,mask_file_CSF]);
    mask_file_CSF = ['conn_',SubjectID,'-','sess',SessionID,'_CSF.nii'];
    
    rois = {mask_file_CSF,mask_file_WM};      
    erois = cell(1,2);
    for i = 1:2
        %---erode
        in_nii = [fmri_dir,filesep,rois{1,i}];
        out_nii = [fmri_dir,filesep,'e',rois{1,i}];
        erode_nii(in_nii,out_nii);        
        %---reslice
        in_nii = [fmri_dir,filesep,'e',rois{1,i}];
        out_nii = [fmri_dir,filesep,'re',rois{1,i}];
        y_Reslice(in_nii,out_nii,'',0, MaskData);
        erois{1,i} = out_nii;
    end
         
    DataDir = [fmri_dir,filesep,'tmp_DPABI'];
    if ~isdir(DataDir)
        mkdir(DataDir)
    else
        delete([DataDir,filesep,'*']);
    end
    copyfile(file_fMRI,DataDir);
    %CovMask_list = {mask_file_CSF};
%     CovMask_list = {mask_file_CSF,mask_file_WM};

%     
%     rois = {mask_file_CSF,mask_file_WM};
%     
%     mask_file_WM_erode = [fmri_dir,filesep,'re_conn_',SubjectID,'-','sess',SessionID,'_WM.nii'];
%     mask_file_CSF_erode = [fmri_dir,filesep,'re_conn_',SubjectID,'-','sess',SessionID,'_CSF.nii'];    
%     erois = {mask_file_WM_erode,mask_file_CSF_erode};
%     for iCovMask = 1:size(CovMask_list,2)
%          %--erosion
%          erode_nii(in_nii,out_nii);
%          %--reslicing
%         file_CovMask_erode = [CovMask_list{1,iCovMask}];
%         file_CovMask_reslice = [fmri_dir,filesep,'r',file_CovMask_erode];
%         y_Reslice(file_CovMask_erode,file_CovMask_reslice,'',0, MaskData);
%         erois{1,iCovMask}=file_CovMask_reslice(1:end-3);
%     end
    
    
    dime=[5,5];
    
    data=[fmri_dir,filesep,'resting_bold.nii'];
    covariates = fmri_compcor(data,erois,dime,'PolOrder',0,'firstmean','on'); 
    %covariates = fmri_compcor(data,rois,dime,'PolOrder',0,'firstmean','on'); %skip eroding
    covariates=cat(2,linspace(-1,1,size(covariates,1))',covariates);
    covariates=cat(2,ones(size(covariates,1),1),covariates);

    MatCov = covariates;

    Postfix='_Covremoved';
    MaskFilename = MaskData;
    ImgCovModel = 1;
    
    CovariablesDef.CovMat = MatCov;
    y_RegressOutImgCovariates(DataDir,CovariablesDef,Postfix,MaskFilename,ImgCovModel);
    file_fMRI_Covremoved = [fmri_dir,filesep,'tmp_DPABI_Covremoved',filesep,'CovRegressed_4DVolume.nii'];
    %===========QC with motion outlier==============
    %--read motion regressor
    %file_motion_regressor='confound.txt'; %confound.txt should be generated by fsl
    if isfile(file_motion_regressor)
         motion_regressor=dlmread(file_motion_regressor);
    %     %--generate temporal mask '1' to keep and '0' to remove
         outlier_mask = sum(motion_regressor,2);
         temporal_mask = ~outlier_mask;
    else
        [Data, ~, ~, ~] = y_ReadAll(file_fMRI_Covremoved);
        temporal_mask = ones(size(Data,4),1);
    end
%     %--total number of outliers in sliding windows (continuous set) of 1600 volumne
%     total_length = 2300;
%     window_length = 1600;
%     number_window = total_length - window_length + 1;
%     vector_outlier_number = zeros(1,number_window);
%     for i_window = 1:number_window
%         vector_outlier_number(1,i_window) = sum(outlier_mask(i_window:i_window + window_length - 1,1));
%     end
%     %--sliding window with minimum number of motion-outliers
%     [minimum_outlier,window_minimum_outlier] = min(vector_outlier_number);
%     continuous_set_mask = zeros(2300,1);
%     continuous_set_mask(window_minimum_outlier:window_minimum_outlier + window_length - 1) =  1;
%     %--QC
%     if minimum_outlier > 160 % not pass QC
%         %%%%%%% Do Something %%%%%
%         rMatrix = [];
%         disp([SubjectID, ':Not pass QC!']);
%         return % end the procedure    
%     end

    
    %============= Processing the fMRI==============

    %file_fMRI = '/export/bedny/Projects/dHCP/sub_passed_QC_allROI/Scrubbing/sub-CC00109XX10_ses-36901_task-rest_desc-preproc_bold.nii';
    %[Data, VoxelSize, FileList, Header] = y_ReadAll(file_fMRI);
    [Data, VoxelSize, FileList, Header] = y_ReadAll(file_fMRI_Covremoved);
    
    %Data_continuous_set = Data(:,:,:,logical(continuous_set_mask));
    %AllVolume = Data_continuous_set;
    AllVolume = Data;
    % OutputName = 'test.nii';
    % MaskData = '/export/bedny/Projects/dHCP/sub_passed_QC_allROI/Scrubbing/sub-CC00109XX10_ses-36901_task-rest_desc-preproc_space-bold_brainmask.nii';
    % TemporalMask = logical(temporal_mask(logical(continuous_set_mask)));
    % ScrubbingMethod='cut';
    % ScrubbingTiming = 'AfterFiltering';
    % IsNeedDetrend = 0;
    % Band = [0,0.08];
    % TR = 0.392;
    % 
    % [AllVolumeBrain, Header_Out] = y_Scrubbing(AllVolume, OutputName, MaskData, TemporalMask, ScrubbingMethod, ScrubbingTiming, IsNeedDetrend, Band, TR, Header);

    %y_Reslice('A1_sub-CC00109XX10_ses-36901.lh.nii','r_A1_sub-CC00109XX10_ses-36901.lh.nii','',0, '/export/bedny/Projects/dHCP/sub_passed_QC_allROI/Scrubbing/sub-CC00109XX10_ses-36901_task-rest_desc-preproc_space-bold_brainmask.nii');
    %y_Reslice('gngcFrontal_sub-CC00109XX10_ses-36901.lh.nii','r_gngcFrontal_sub-CC00109XX10_ses-36901.lh.nii','',0, '/export/bedny/Projects/dHCP/sub_passed_QC_allROI/Scrubbing/sub-CC00109XX10_ses-36901_task-rest_desc-preproc_space-bold_brainmask.nii');
    %ROIDef={'r_A1_sub-CC00109XX10_ses-36901.lh.nii','r_gngcFrontal_sub-CC00109XX10_ses-36901.lh.nii'};
    %OutputName='test_ROI_signal';
    %MaskData = '/export/bedny/Projects/dHCP/sub_passed_QC_allROI/Scrubbing/sub-CC00109XX10_ses-36901_task-rest_desc-preproc_space-bold_brainmask.nii';
    IsMultipleLabel=0;
    IsNeedDetrend=0;
    Band = [0.0067,0.08];
    TR = 2;
    %TemporalMask = logical(temporal_mask(logical(continuous_set_mask)));
    TemporalMask = logical(temporal_mask);
    ScrubbingMethod='cut';
    ScrubbingTiming = 'AfterFiltering';
    CUTNUMBER=10;
    [ROISignals] = y_ExtractROISignal(AllVolume, ROIDef, OutputName, MaskData, IsMultipleLabel, IsNeedDetrend, Band, TR, TemporalMask, ScrubbingMethod, ScrubbingTiming, Header,CUTNUMBER); 
    %rMatrix=corr(ROISignals);
end

